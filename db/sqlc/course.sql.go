// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: course.sql

package db

import (
	"context"
)

const countCourse = `-- name: CountCourse :one
SELECT COUNT(*) FROM courses
`

func (q *Queries) CountCourse(ctx context.Context) (int64, error) {
	row := q.db.QueryRowContext(ctx, countCourse)
	var count int64
	err := row.Scan(&count)
	return count, err
}

const createCourse = `-- name: CreateCourse :one
INSERT INTO courses (
  code,
  name
) VALUES (
  $1, $2
) RETURNING code, name
`

type CreateCourseParams struct {
	Code string `json:"code"`
	Name string `json:"name"`
}

func (q *Queries) CreateCourse(ctx context.Context, arg CreateCourseParams) (Course, error) {
	row := q.db.QueryRowContext(ctx, createCourse, arg.Code, arg.Name)
	var i Course
	err := row.Scan(&i.Code, &i.Name)
	return i, err
}
